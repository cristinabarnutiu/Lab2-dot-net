{"version":3,"sources":["./src/app/app.component.html","./src/app/counter/counter.component.html","./src/app/fetch-data/fetch-data.component.html","./src/app/home/home.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/todo-item-details/todo-item-details.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/counter/counter.component.ts","./src/app/fetch-data/fetch-data.component.ts","./src/app/home/home.component.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/app/todo-item-details/todo-item-details.component.css","./src/app/todo-item-details/todo-item-details.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n<p></p>\\r\\n<p>{{name}}</p>\\r\\n<p></p>\\r\\n<p>{{name}}</p>\\r\\n<input type=\\\"text\\\" value={{name}} />\\r\\n\\r\\n<p>{{name}}</p>\\r\\n\"","export default \"<h1 id=\\\"tableLabel\\\">Todo Items</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!todoItems\\\"><em>Loading...</em></p>\\r\\n\\r\\n<p>List of Todo Items</p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"todoItems\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Title</th>\\r\\n            <th>Description</th>\\r\\n            <th>Date Added</th>\\r\\n            <th>Deadline</th>\\r\\n            <th>Importance</th>\\r\\n            <th>State</th>\\r\\n            <th>Date Closed</th>\\r\\n            <th>Number of Comments</th>\\r\\n            <th>Operations</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let todoItem of todoItems\\\">\\r\\n            <td>{{ todoItem.title }}</td>\\r\\n            <td>{{ todoItem.description }}</td>\\r\\n            <td>{{ todoItem.dateAdded }}</td>\\r\\n            <td>{{ todoItem.deadline }}</td>\\r\\n            <td>{{ todoItem.importance }}</td>\\r\\n            <td>{{ todoItem.state }}</td>\\r\\n            <td>{{ todoItem.dateClosed }}</td>\\r\\n            <td>{{ todoItem.numberOfComments }}</td>\\r\\n            <td>\\r\\n            <a [routerLink]=\\\"['/fetch-data',todoItem.id]\\\" routerLinkActive=\\\"active\\\">Details</a> | \\r\\n            <a>Edit</a> |\\r\\n            <a>Delete</a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<p>Add Todo Item</p>\\r\\n\\r\\n<input [(ngModel)]=\\\"title\\\" />\\r\\n\\r\\n<p>{{ title }}</p>\\r\\n\\r\\n<button (click)=\\\"submit()\\\">Submit!</button>\\r\\n\\r\\n<input type=\\\"date\\\" />\\r\\n\\r\\n\\r\\n\"","export default \"<h1>Todo App</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\"","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">My Todo Application using Web API</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\"\\r\\n              [routerLinkActive]=\\\"['link-active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\">Counter</a>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\">Fetch data</a>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/my-route']\\\">My Route</a>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","export default \"<p>todo-item-details works!</p>\\n\\n<p *ngIf=\\\"todoItem\\\"><em>Title: {{todoItem.title}}</em></p>\\n<p *ngIf=\\\"todoItem\\\"><em>Description: {{todoItem.description}}</em></p>\\n<p *ngIf=\\\"todoItem\\\"><em>Date Added: {{todoItem.dateAdded}}</em></p>\\n<p *ngIf=\\\"todoItem\\\"><em>Deadline: {{todoItem.deadline}}</em></p>\\n<p *ngIf=\\\"todoItem\\\"><em>Importance: {{todoItem.importance}}</em></p>\\n<p *ngIf=\\\"todoItem\\\"><em>State: {{todoItem.state}}</em></p>\\n<p *ngIf=\\\"todoItem\\\"><em>Date Closed: {{todoItem.dateClosed}}</em></p>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { TodoItemDetailsComponent } from './todo-item-details/todo-item-details.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        CounterComponent,\r\n        FetchDataComponent,\r\n        TodoItemDetailsComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        RouterModule.forRoot([\r\n            { path: '', component: HomeComponent, pathMatch: 'full' },\r\n            { path: 'counter', component: CounterComponent },\r\n            {\r\n                path: 'fetch-data',\r\n                component: FetchDataComponent,\r\n            \r\n            //children: [\r\n            //    {\r\n            //        path: 'todo-item-details/:todoItemId',\r\n            //        component: TodoItemDetailsComponent\r\n            //    }\r\n            //]\r\n        \r\n            },\r\n            {\r\n                path: 'fetch-data/:todoItemId',\r\n                component: TodoItemDetailsComponent,\r\n            },\r\n\r\n      { path: 'my-route', component: CounterComponent },\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount: number = 3;\r\n\r\n  public name: string = \"test\";\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n    this.name = \"\";\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n    public todoItems: TodoItem[];\r\n\r\n    public name: string = \"test\";\r\n    //public title: string = \"test\"; \r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n        this.loadTodoItems();\r\n    }\r\n\r\n    loadTodoItems() {\r\n\r\n    this.http.get<TodoItem[]>(this.baseUrl + 'api/todoitems').subscribe(result => {\r\n          this.todoItems = result;\r\n          console.log(this.todoItems);\r\n      }, error => console.error(error));\r\n    }\r\n\r\n    submit() {\r\n        var todoItem: TodoItem = <TodoItem>{};\r\n        todoItem.title = this.name;\r\n        todoItem.description = this.name;\r\n        todoItem.dateAdded = null;\r\n        todoItem.deadline = null;\r\n        todoItem.importance = Importance.Low;\r\n        todoItem.state = State.Open;\r\n        todoItem.dateClosed = null;\r\n\r\n        this.http.post(this.baseUrl + 'api/todoitems', todoItem).subscribe(result => {\r\n            console.log('succes!');\r\n            this.loadTodoItems();\r\n        },\r\n            error => {\r\n                if (error.status == 400) {\r\n                    console.log(error.errror.errors)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\ninterface TodoItem {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    dateAdded: Date;\r\n    deadline: Date;\r\n    importance: Importance;\r\n    state: State;\r\n    dateClosed: Date;\r\n}\r\n\r\nenum Importance { Low =0, Medium=1, High=2 }\r\nenum State { Open=0, InProgress=1, Closed=2 }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8taXRlbS1kZXRhaWxzL3RvZG8taXRlbS1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\n@Component({\n  selector: 'app-todo-item-details',\n  templateUrl: './todo-item-details.component.html',\n  styleUrls: ['./todo-item-details.component.css']\n})\nexport class TodoItemDetailsComponent implements OnInit {\n\n    private todoItem: TodoItemWithDetails;\n\n    constructor(\n        private http: HttpClient,\n        @Inject('BASE_URL')\n        private baseUrl: string,\n        //@Input() private todoItemId: number\n        private route: ActivatedRoute){\n\n        //this.loadTodoItem();\n    }\n\r\n    loadTodoItem(todoItemId: string) {\r\n        this.http.get<TodoItemWithDetails>(this.baseUrl + 'api/todoitems/'+todoItemId).subscribe(result => {\r\n            this.todoItem = result;\r\n            console.log(this.todoItem);\r\n        }, error => console.error(error));\r\n    }\n\n    ngOnInit() {\n        this.route.paramMap.subscribe(params => {\n            this.loadTodoItem(params.get('todoItemId'));\n        });\n  }\n\n}\n\ninterface Comment {\n    id: number;\n    text: string,\n    important: boolean\n}\n\ninterface TodoItemWithDetails {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    dateAdded: Date;\r\n    deadline: Date;\r\n    importance: string;\r\n    state: string;\r\n    dateClosed: Date;\r\n    comments: Comment[]\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}